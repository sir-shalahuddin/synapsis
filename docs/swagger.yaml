basePath: /api/
definitions:
  dto.CartRequest:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  dto.ErrorMessage:
    properties:
      error:
        type: boolean
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.Order:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  dto.OrderRequest:
    properties:
      orders:
        items:
          $ref: '#/definitions/dto.Order'
        type: array
    required:
    - orders
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.Response:
    properties:
      data: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
info:
  contact: {}
  description: bismillah lolos
  title: SYN STORE API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: User registration
      tags:
      - auth
  /carts:
    delete:
      consumes:
      - application/json
      description: Deletes a product from the user's cart
      parameters:
      - description: Cart request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete product from cart
      tags:
      - cart
    get:
      consumes:
      - application/json
      description: Retrieves all products in the user's cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get products in cart
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Adds a product to the user's cart
      parameters:
      - description: Cart request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Add product to cart
      tags:
      - cart
  /orders:
    post:
      consumes:
      - application/json
      description: Creates a new order for the user
      parameters:
      - description: Order request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create an order
      tags:
      - order
  /orders/{order_id}/payments:
    post:
      consumes:
      - application/json
      description: Processes payment for a specific order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Pay for an order
      tags:
      - order
  /products:
    get:
      consumes:
      - application/json
      description: Retrieves products, optionally filtered by category
      parameters:
      - description: Category filter
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Get products
      tags:
      - product
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
